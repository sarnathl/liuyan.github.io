<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Keep</title>
  
  <subtitle>保持饥饿 保持愚蠢</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-07T02:49:52.865Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yan Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/10/07/css-hemoxing01/"/>
    <id>http://yoursite.com/2018/10/07/css-hemoxing01/</id>
    <published>2018-10-07T02:49:52.865Z</published>
    <updated>2018-10-07T02:49:52.865Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>css盒模型</title>
    <link href="http://yoursite.com/2018/10/07/hello-world.3/"/>
    <id>http://yoursite.com/2018/10/07/hello-world.3/</id>
    <published>2018-10-06T16:00:00.000Z</published>
    <updated>2018-10-07T02:53:56.226Z</updated>
    
    <content type="html"><![CDATA[<p>aaaaa</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;aaaaa&lt;/p&gt;

      
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>小程序绑定数据</title>
    <link href="http://yoursite.com/2018/09/13/wx-bangding/"/>
    <id>http://yoursite.com/2018/09/13/wx-bangding/</id>
    <published>2018-09-12T16:00:00.000Z</published>
    <updated>2018-09-14T00:31:29.975Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一-绑定数据的几种用法"><a href="#一-绑定数据的几种用法" class="headerlink" title="一.绑定数据的几种用法"></a>一.绑定数据的几种用法</h4><p><strong>首先在我们的xx.js页面模拟几条数据</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    <span class="comment">// 控制显示是否隐藏 </span></span><br><span class="line">    flag: <span class="literal">false</span>,  </span><br><span class="line">    <span class="comment">//1. 普通数据</span></span><br><span class="line">    message:<span class="string">"普通的绑定数据"</span>,</span><br><span class="line">    <span class="comment">//2.1 创建个数组模拟网络数据</span></span><br><span class="line">    array: [&#123;</span><br><span class="line">      message: <span class="string">'hello'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      message: <span class="string">'world'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      message: <span class="string">"!"</span></span><br><span class="line">    &#125;],</span><br><span class="line">      items: [</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">"苹果"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">"香蕉"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">"栗子"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">"鸭梨"</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">"山大"</span> &#125;,</span><br><span class="line">      ],</span><br><span class="line">    play:<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">3</span>+<span class="number">1</span>),</span><br><span class="line"></span><br><span class="line">    itemTempl:&#123;</span><br><span class="line">        index:<span class="number">0</span>,</span><br><span class="line">        msg:<span class="string">"this is a template"</span>,</span><br><span class="line">        time:<span class="string">"2018-09-13"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="1-普通数据绑定，来看我们的xx-wxml"><a href="#1-普通数据绑定，来看我们的xx-wxml" class="headerlink" title="1.普通数据绑定，来看我们的xx.wxml"></a>1.普通数据绑定，来看我们的xx.wxml</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--1.普通的数据绑定 --&gt;</span><br><span class="line">&lt;view&gt;&#123;&#123;message&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure><h5 id="2-绑定数据集-循环"><a href="#2-绑定数据集-循环" class="headerlink" title="2.绑定数据集 循环"></a>2.绑定数据集 循环</h5><p>循环数组的名称，我们的数组上面定义叫<strong>array</strong>[<strong>{}</strong>,<strong>{}</strong>]，所以在绑定数据的时候要用俩大括号<strong></strong>来绑定数据。</p><p><strong>1.</strong>用我们的<strong>block</strong>来包裹住<br><strong>2.</strong>给循环起个名字 叫<strong>item</strong> 注意：要用这个循环的名称<strong>“item”.</strong>属性名称，是<strong>message</strong><br><strong>3.wx:key=”index”</strong> 必须是<strong>index</strong> 也可以是集合里的<strong>id</strong>,不加<strong>wx:key</strong>会有警告如下图    </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;</span><br><span class="line">  &lt;block wx:for=<span class="string">"&#123;&#123;array&#125;&#125;"</span> wx:for-item=<span class="string">"item"</span> wx:key=<span class="string">"index"</span>&gt;</span><br><span class="line">    &lt;view&gt;&#123;&#123;item.message&#125;&#125;&lt;/view&gt;</span><br><span class="line">  &lt;/block&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/wx-0101.png"></p><h5 id="2-1来判断数据是显示还是隐藏，我们上面定义了flag-false-如果是true就隐藏否则显示"><a href="#2-1来判断数据是显示还是隐藏，我们上面定义了flag-false-如果是true就隐藏否则显示" class="headerlink" title="2.1来判断数据是显示还是隐藏，我们上面定义了flag:false 如果是true就隐藏否则显示"></a>2.1来判断数据是显示还是隐藏，我们上面定义了flag:false 如果是true就隐藏否则显示</h5><p>hidden 和 if 都可以控制显示和隐藏那么我们什么时候用哪一种呢？<br>区别：wx:if切换时会有<strong>界面一个局部渲染的过程，每次重新渲染(更多切换消耗)</strong><br>hidden 更多的是<strong>初始化渲染消耗</strong> ，控制视图的显示隐藏(频繁切换用hidden)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view hidden="&#123;&#123;flag ? true : false&#125;&#125;"&gt;</span><br><span class="line">  Hidde是否显示或隐藏</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><h5 id="3-通过模板template方式来绑定数据"><a href="#3-通过模板template方式来绑定数据" class="headerlink" title="3.通过模板template方式来绑定数据"></a>3.通过模板template方式来绑定数据</h5><p>模板的好处： 引入我们自定义的模板，模板的好处，修改一处，调用的地方都会跟着改变，避免了wxml的臃肿问题，相当于android的include，<strong>声明一处，多地方调用，修改一处，调用者不用修改</strong><br>xx/xxtemplate.wxml先定义我们的模板，给模板起个名字<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template name="fruit"&gt;</span><br><span class="line">   &lt;view&gt;&#123;&#123;name&#125;&#125;&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>引入我们的模板第一步在当前文件中引入</span><br><span class="line">&lt;<span class="keyword">import</span> src=<span class="string">"../你的模板目录/模板名字.wxml [别忘了.wxml]"</span>&gt;</span><br><span class="line"><span class="number">2.</span>wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;数据名称&#125;&#125;"</span> ,我们在我们的data中定义了名称是items的数据源，wx:<span class="keyword">for</span>-item=<span class="string">"循环名称"</span> 把这个名称传递给templeate模板</span><br></pre></td></tr></table></figure><p><label style="color:red">3.注意事项：不要忘记引入模板的后缀名.wxml 不要忘记闭合标签 <br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;import src="../xxmplate/xxtemplate.wxml"&gt;&lt;/import&gt;</span><br><span class="line">&lt;view&gt;</span><br><span class="line">  &lt;block wx:for=<span class="string">"&#123;&#123;items&#125;&#125;"</span> wx:for-item=<span class="string">"item"</span> wx:key=<span class="string">"index"</span>&gt;</span><br><span class="line">      &lt;template is=<span class="string">"fruit"</span> data=<span class="string">"&#123;&#123;...item&#125;&#125;"</span>&gt;&lt;/template&gt;</span><br><span class="line">  &lt;/block&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure></label></p><h5 id="4-条件渲染"><a href="#4-条件渲染" class="headerlink" title="4.条件渲染"></a>4.条件渲染</h5><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;</span><br><span class="line">  &lt;view&gt;今天去哪里玩？&lt;/view&gt;</span><br><span class="line">  &lt;view wx:if=<span class="string">"&#123;&#123;play===1&#125;&#125;"</span>&gt;</span><br><span class="line">    在家里玩</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">  &lt;view wx:elif=<span class="string">"&#123;&#123;play===2&#125;&#125;"</span>&gt;</span><br><span class="line">    去海边玩</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">  &lt;view wx:else&gt;</span><br><span class="line">    逛街</span><br><span class="line">  &lt;/view&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/wx-0102.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一-绑定数据的几种用法&quot;&gt;&lt;a href=&quot;#一-绑定数据的几种用法&quot; class=&quot;headerlink&quot; title=&quot;一.绑定数据的几种用法&quot;&gt;&lt;/a&gt;一.绑定数据的几种用法&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;首先在我们的xx.js页面模拟几条数据&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 控制显示是否隐藏 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1. 普通数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message:&lt;span class=&quot;string&quot;&gt;&quot;普通的绑定数据&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//2.1 创建个数组模拟网络数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    array: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: &lt;span class=&quot;string&quot;&gt;&#39;world&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: &lt;span class=&quot;string&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      items: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;苹果&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;香蕉&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;栗子&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;鸭梨&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;山大&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    play:&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemTempl:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg:&lt;span class=&quot;string&quot;&gt;&quot;this is a template&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time:&lt;span class=&quot;string&quot;&gt;&quot;2018-09-13&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="小程序" scheme="http://yoursite.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>推送显示未读数量</title>
    <link href="http://yoursite.com/2018/09/12/android-push-badge/"/>
    <id>http://yoursite.com/2018/09/12/android-push-badge/</id>
    <published>2018-09-11T16:00:00.000Z</published>
    <updated>2018-09-14T01:50:37.814Z</updated>
    
    <content type="html"><![CDATA[<h5 id="在实际开发中会有这样还一个需求，显示推送过来的未读消息数量"><a href="#在实际开发中会有这样还一个需求，显示推送过来的未读消息数量" class="headerlink" title="在实际开发中会有这样还一个需求，显示推送过来的未读消息数量"></a>在实际开发中会有这样还一个需求，显示推送过来的未读消息数量</h5><p>推送实时更新未读消息数量，接收到【一条消息】，就【显示未读数量】，当用户点击，或者拖拽的时候消除掉未读消息数量，先上一下效果图，当我推送两条消息过来的时候显示的样子</p><p><img src="/images/baidu.png"><br><a id="more"></a></p><h4 id="用到的技术-EventBus-响应式框架：以及显示消息的QBadgeView负责来显示"><a href="#用到的技术-EventBus-响应式框架：以及显示消息的QBadgeView负责来显示" class="headerlink" title="用到的技术 EventBus 响应式框架：以及显示消息的QBadgeView负责来显示"></a>用到的技术 EventBus 响应式框架：以及显示消息的QBadgeView负责来显示</h4><p><strong>目的：</strong><br>1.把接收到的消息从Receiver发送到主Activity，在主Activity中接收这个数量<br>2.把接收到的数量用QBadgeView来显示  badgerView更多用法请参考  <a href="https://github.com/qstumn/BadgeView" target="_blank" rel="noopener">https://github.com/qstumn/BadgeView</a></p><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p><strong>先引入我们的QBadgeView 库和EventBus库在我们的app-&gt;build.gradle中添加</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'q.rorbin:badgeview:1.1.3'</span></span><br><span class="line">compile <span class="string">'org.greenrobot:eventbus:3.0.0'</span></span><br></pre></td></tr></table></figure></p><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在我们接收自定义消息的地方添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"JPush"</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//当接受到消息, 弹出通知栏</span></span><br><span class="line">        Bundle bundle = intent.getExtras();</span><br><span class="line">        <span class="comment">// 消息内容</span></span><br><span class="line">        String content = bundle.getString(JPushInterface.EXTRA_ALERT);</span><br><span class="line">       <span class="keyword">if</span> (JPushInterface.ACTION_MESSAGE_RECEIVED.equals(intent.getAction())) &#123;</span><br><span class="line">            processCustomMessage(context, bundle);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这里当我们APP端接收到推送过来的消息，我们就递增，并存起来        </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processCustomMessage</span><span class="params">(Context context, Bundle bundle)</span> </span>&#123;</span><br><span class="line">        sendNotification(context,bundle);</span><br><span class="line">        String msgText = bundle.getString(JPushInterface.EXTRA_MESSAGE);</span><br><span class="line">        <span class="comment">// 初始化一个存取未读消息的，默认存储是0</span></span><br><span class="line">        <span class="keyword">int</span> pushcount = SharePreferenceUtils.getInt(context,<span class="string">"pushcount"</span>,<span class="number">0</span>);</span><br><span class="line">        pushcount++;</span><br><span class="line">        <span class="comment">// 当收到消息的时候在存</span></span><br><span class="line">        SharePreferenceUtils.setInt(context,<span class="string">"pushcount"</span>,pushcount);</span><br><span class="line">        getMsgCount(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拿到我们存的消息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getSendMessage</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SharePreferenceUtils.getInt(context,<span class="string">"pushcount"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送我们的消息给MainActivity</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getMsgCount</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> msg = getSendMessage(context);</span><br><span class="line">        MessageEventBean messageEvent = <span class="keyword">new</span> MessageEventBean(msg);</span><br><span class="line">        EventBus.getDefault().post(messageEvent);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接下来看看我们的MainActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line">    <span class="meta">@InjectView</span>(R.id.swicth_draggable)</span><br><span class="line">    Switch swicth_draggable; </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> msgCount;<span class="comment">// 接收消息数量</span></span><br><span class="line">    <span class="keyword">private</span> QBadgeView badgeView;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Badge&gt; badges;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ButterKnife.inject(<span class="keyword">this</span>);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化 注意看我的顺序，badges 要放在后面</span></span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        EventBus.getDefault().register(<span class="keyword">this</span>);</span><br><span class="line">        CompoundButton.OnCheckedChangeListener onCheckedChangeListener = <span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (Badge badge : badges) &#123;</span><br><span class="line">                    badge.setOnDragStateChangedListener(isChecked ?</span><br><span class="line">                            <span class="keyword">new</span> Badge.OnDragStateChangedListener() &#123;</span><br><span class="line">                                <span class="meta">@Override</span></span><br><span class="line">                                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDragStateChanged</span><span class="params">(<span class="keyword">int</span> dragState, Badge badge, View targetView)</span> </span>&#123;</span><br><span class="line">                                    SharePreferenceUtils.remove(MainActivity.<span class="keyword">this</span>,<span class="string">"pushcount"</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; : <span class="keyword">null</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        swicth_draggable.setOnCheckedChangeListener(onCheckedChangeListener);</span><br><span class="line">        badges = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        badgeView = <span class="keyword">new</span> QBadgeView(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// 拿到我们存的数据</span></span><br><span class="line">        msgCount = SharePreferenceUtils.getInt(MainActivity.<span class="keyword">this</span>,<span class="string">"pushcount"</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 这里我们把显示未读数量提取出来放到一个方法里,这里是我们用户一进来主页面显示的未读消息数量</span></span><br><span class="line">        getBrageCountMsg(msgCount); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 未读数量</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getBrageCountMsg</span><span class="params">(<span class="keyword">int</span> msgCount)</span> </span>&#123;</span><br><span class="line">        badgeView.setBadgeNumber(msgCount);</span><br><span class="line">        badgeView.bindTarget(mTabtab4);</span><br><span class="line">        badges.add(badgeView);</span><br><span class="line">        swicth_draggable.setChecked(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Subscribe</span>(threadMode = ThreadMode.MAIN)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMsgEvent</span><span class="params">(MessageEventBean messageEventBean)</span></span>&#123;</span><br><span class="line">        msgCount = messageEventBean.getMessage();</span><br><span class="line">        SharePreferenceUtils.setInt(MainActivity.<span class="keyword">this</span>,<span class="string">"pushcount"</span>,msgCount);</span><br><span class="line">        <span class="comment">// 这里是我们推送数据过来实时显示的未读消息数量</span></span><br><span class="line">        getBrageCountMsg(msgCount);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 在我点击了位置服务的时候删除未读消息[在你想删除的地方调用该方法即可]</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeBadge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Badge badge : badges) &#123;</span><br><span class="line">            SharePreferenceUtils.remove(MainActivity.<span class="keyword">this</span>,<span class="string">"pushcount"</span>);</span><br><span class="line">            badge.hide(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 别忘了解除绑定</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        EventBus.getDefault().unregister(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;在实际开发中会有这样还一个需求，显示推送过来的未读消息数量&quot;&gt;&lt;a href=&quot;#在实际开发中会有这样还一个需求，显示推送过来的未读消息数量&quot; class=&quot;headerlink&quot; title=&quot;在实际开发中会有这样还一个需求，显示推送过来的未读消息数量&quot;&gt;&lt;/a&gt;在实际开发中会有这样还一个需求，显示推送过来的未读消息数量&lt;/h5&gt;&lt;p&gt;推送实时更新未读消息数量，接收到【一条消息】，就【显示未读数量】，当用户点击，或者拖拽的时候消除掉未读消息数量，先上一下效果图，当我推送两条消息过来的时候显示的样子&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/baidu.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>百度地图debug release Key申请</title>
    <link href="http://yoursite.com/2018/09/11/android-baidusdk/"/>
    <id>http://yoursite.com/2018/09/11/android-baidusdk/</id>
    <published>2018-09-10T16:00:00.000Z</published>
    <updated>2018-09-14T01:50:37.813Z</updated>
    
    <content type="html"><![CDATA[<h6 id="百度SDK-申请"><a href="#百度SDK-申请" class="headerlink" title="百度SDK 申请"></a>百度SDK 申请</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//lbsyun.baidu.com/apiconsole/key/create</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/images/003.png"></p><h4 id="二-发布版-SHA1-debug-版本申请"><a href="#二-发布版-SHA1-debug-版本申请" class="headerlink" title="二.发布版 SHA1 debug 版本申请"></a>二.发布版 SHA1 debug 版本申请</h4><ol><li>打开终端输入cd .android</li><li>keytool -list -v -keystore debug.keystore</li><li>密钥口令android</li><li><img src="/images/001.png"></li><li>SHA1 就是我们的开发板  也就是debug版本</li></ol><h4 id="三-开发版本-SHA1-release-版本申请"><a href="#三-开发版本-SHA1-release-版本申请" class="headerlink" title="三.开发版本 SHA1 release 版本申请"></a>三.开发版本 SHA1 release 版本申请</h4><ol><li>首先我们的应用是打包签名后的 ，用我们的jks再来一遍就生成了发布版的SHA1</li><li>打开终端输入cd .android</li><li>keytool -list -v -keystore /你自己的releaseKey路径即可</li><li><img src="/images/002.png"></li><li>生成了不一样的SHA1</li><li>SHA1 就是我们的发布版的SHA1  也就是release版本</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;百度SDK-申请&quot;&gt;&lt;a href=&quot;#百度SDK-申请&quot; class=&quot;headerlink&quot; title=&quot;百度SDK 申请&quot;&gt;&lt;/a&gt;百度SDK 申请&lt;/h6&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//lbsyun.baidu.com/apiconsole/key/create&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
</feed>
